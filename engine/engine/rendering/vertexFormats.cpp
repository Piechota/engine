#include "../headers.h"
#include "vertexFormats.h"

char const* POSITION	= "POSITION";
char const* NORMAL		= "NORMAL";
char const* TANGENT		= "TANGENT";
char const* TEXCOORD	= "TEXCOORD";

D3D12_INPUT_ELEMENT_DESC const SPosVertexFormat::desc[] = 
{
	{ POSITION, 0, DXGI_FORMAT_R32G32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
};
UINT const SPosVertexFormat::descNum = ARRAYSIZE( SPosVertexFormat::desc );

D3D12_INPUT_ELEMENT_DESC const SPosUvVertexFormat::desc[] = 
{
	{ POSITION, 0, DXGI_FORMAT_R32G32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
	{ TEXCOORD, 0, DXGI_FORMAT_R32G32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 }
};
UINT const SPosUvVertexFormat::descNum = ARRAYSIZE( SPosUvVertexFormat::desc );

D3D12_INPUT_ELEMENT_DESC const SSimpleObjectVertexFormat::desc[] = 
{
	{ POSITION, 0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
	{ NORMAL,	0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
	{ TANGENT,	0, DXGI_FORMAT_R32G32B32_FLOAT, 0, D3D12_APPEND_ALIGNED_ELEMENT, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 },
	{ TEXCOORD, 0, DXGI_FORMAT_R32G32_FLOAT,	0, D3D12_APPEND_ALIGNED_ELEMENT, D3D12_INPUT_CLASSIFICATION_PER_VERTEX_DATA, 0 }
};
UINT const SSimpleObjectVertexFormat::descNum = ARRAYSIZE( SSimpleObjectVertexFormat::desc );